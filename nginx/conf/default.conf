# events { }

# http {

# Only return Nginx in server header
server_tokens off;

# Enable CORS
add_header 'Access-Control-Allow-Origin' '*';

# add_header 'Access-Control-Allow-Origin' "$http_origin" always;
# add_header 'Access-Control-Allow-Credentials' 'true' always;
# add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
# add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
# add_header 'Access-Control-Expose-Headers' 'Authorization' always;

# proxy_hide_header Access-Control-Allow-Origin;
# add_header Access-Control-Allow-Origin $http_origin;

server {
    listen      80;
    listen [::]:80;
    server_name enershare.zapto.org;
    # charset utf-8;

    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen      443 ssl;
    listen [::]:443 ssl;
    server_name enershare.zapto.org;

    # charset utf-8;
    http2 on;

    ssl_certificate   /etc/letsencrypt/live/enershare.zapto.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/enershare.zapto.org/privkey.pem;

    # Avoid SSL and older TLS
    ssl_protocols TLSv1.2 TLSv1.3;

    # Compilation of the top cipher suites: https://ssl-config.mozilla.org/#server=nginx
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    #:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    #:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384;

    # ssl_prefer_server_ciphers off;

    # Run in terminal to generate 4096-bits DH group: openssl dhparam -out /etc/ssl/certs/dhparam.pem 4096
    # ssl_dhparam /etc/ssl/certs/dhparam.pem;

    # Perfect Forward Secrecy(PFS) is frequently compromised without this
    ssl_prefer_server_ciphers on;    
    ssl_session_tickets off;

    # Enable SSL session caching for improved performance
    ssl_session_cache shared:SSL:10m;    
    ssl_session_timeout 1d;

    # By default, the buffer size is 16k, which corresponds to minimal overhead when sending big responses.
    # To minimize Time To First Byte it may be beneficial to use smaller values
    ssl_buffer_size 8k;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # replace with the IP address of your resolver
    resolver 1.1.1.1;

    # X-Content-Type-Options: avoid MIME type sniffing
    add_header X-Content-Type-Options nosniff;

    # # Strict Transport Security (HSTS): Yes
    # add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";

    # # Content-Security-Policy (CSP): Yes
    # # No 'script-src' directive, you need to test it yourself
    # add_header Content-Security-Policy "object-src 'none'; base-uri 'none'; require-trusted-types-for 'script'; frame-ancestors 'self';";
    # # The safest CSP, only block your website to be inside an inframe
    # add_header Content-Security-Policy "frame-ancestors 'self';";
    # The default, allow everything but only from the same origin
    # add_header Content-Security-Policy "default-src 'self';"

    # Simple Cross-site Scripting scanning
    add_header X-XSS-Protection "1; mode=block";

    # add_header X-Frame-Options "SAMEORIGIN";
    # add_header Referrer-Policy "origin";

    #=================#
    # Reverse proxies #
    #=================#

    location ^~ /ip {
        proxy_pass http://ifconfig.me;

        rewrite ^/ip/(.*)$ /$1 break;
    }

    location ^~ /editor {
        proxy_pass http://node-red:1880;

        # WebSocket proxying
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # proxy_set_header Host $host;

        # /etc/nginx/proxy_params
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # proxy_set_header X-Forwarded-Host $host;
        # proxy_set_header X-NginX-Proxy true;

        # Disable buffering
        proxy_buffering off;

        # proxy_buffers 4 256k;
        # proxy_buffer_size 128k;
        # proxy_busy_buffers_size 256k;
    }

    location ^~ /ui {
        proxy_pass http://node-red:1880;

        proxy_buffering off;
        # proxy_buffers 4 256k;
        # proxy_buffer_size 128k;
        # proxy_busy_buffers_size 256k;
    }

    location ^~ /getHeaders/ {
        proxy_pass http://172.17.0.1:1880/headers/;
    }

    location ^~ /proxyVars/ {
        proxy_pass http://172.17.0.1:1880/headers/;

        proxy_set_header document_root             $document_root;
        proxy_set_header host                      $host;
        proxy_set_header hostname                  $hostname;
        proxy_set_header http_host                 $http_host;
        proxy_set_header http_upgrade              $http_upgrade;
        proxy_set_header http_user_agent           $http_user_agent;
        proxy_set_header http_x_forwarded_for      $http_x_forwarded_for;
        proxy_set_header nginx_version             $nginx_version;
        proxy_set_header proxy_add_x_forwarded_for $proxy_add_x_forwarded_for;
        proxy_set_header remote_addr               $remote_addr;
        proxy_set_header remote_addr               $remote_addr;
        proxy_set_header remote_port               $remote_port;
        proxy_set_header request_id                $request_id;
        proxy_set_header request_uri               $request_uri;
        proxy_set_header scheme                    $scheme;
        proxy_set_header server_addr               $server_addr;
        proxy_set_header server_port               $server_port';
        proxy_set_header time_local                $time_local;
        proxy_set_header uri                       $uri;
    }

#    # Keyrock
#    location /keyrock/ {
#        proxy_pass http://keyrock:3005;
#
#        proxy_set_header    X-Forwarded-Host   $host;
#        proxy_set_header    Host               $host;
#        proxy_set_header    X-Real-IP          $remote_addr;
#        proxy_set_header    X-Forwarded-For    $proxy_add_x_forwarded_for;
#
#        rewrite ^/keyrock(/.*)$  $1 break;
#
#        proxy_redirect / /keyrock/;
#        sub_filter '="/' '="/keyrock/';
#        sub_filter '= "/' '= "/keyrock/';
#        sub_filter '=\'/' '=\'/keyrock/';
#
#        sub_filter_once off;
#    }
#
#    location /idm/ {
#        proxy_pass http://keyrock:3005;
#    }
#
#    location /img/ {
#        proxy_pass http://keyrock:3005;
#    }

    # Orion (without IdM)
    location ^~ /orion/ {
        proxy_pass http://orion:1026/;
    }

    location ^~ /orion-ld/ {
        proxy_pass http://orion-ld:1026/;
    }

    location ^~ /orion-v2/ {
        proxy_pass http://orion-v2:1026/;
    }

    location ^~ /smartdatamodels/ {
        proxy_pass https://smartdatamodels.org:1026/;
    }

    # Orion with IdM & PEP Proxy
    location ^~ /ngsi-ld {
        proxy_pass http://orion-proxy:1027;
    }

    location ^~ /v2 {
        proxy_pass http://orion-proxy:1027;
    }

    location ^~ /version {
        proxy_pass http://orion-proxy:1027;
    }

    # Blockchain
    location ^~ /rpc {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_pass http://ganache:7545/;
    }

    location ^~ /core/ {
        proxy_pass http://172.17.0.1:8080/;
    }

    location ^~ /keyclock/ {
        proxy_pass http://172.17.0.1:8081/;

        # WebSocket proxying
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;

        # /etc/nginx/proxy_params
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-NginX-Proxy true;

        # Disable buffering
        # proxy_buffering off;

        # proxy_buffers 4 256k;
        # proxy_buffer_size 128k;
        # proxy_busy_buffers_size 256k;
    }

    location = /enershare.png {
        proxy_pass http://172.17.0.1:4173;
    }

    location ^~ /assets {
        proxy_pass http://172.17.0.1:4173;

        # WebSocket proxying
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # /etc/nginx/proxy_params
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-NginX-Proxy true;

        # Disable buffering
        # proxy_buffering off;

        # proxy_buffers 4 256k;
        # proxy_buffer_size 128k;
        # proxy_busy_buffers_size 256k;
    }

    location ^~ /marketplace/ {
        proxy_pass http://172.17.0.1:4173/;

        # WebSocket proxying
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # /etc/nginx/proxy_params
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-NginX-Proxy true;

        # Disable buffering
        # proxy_buffering off;

        # proxy_buffers 4 256k;
        # proxy_buffer_size 128k;
        # proxy_busy_buffers_size 256k;
    }

    #=============#
    # Web servers #
    #=============#

    # # Nginx web server (/home/www/public_html/localhost/public/uploads)
    # location /uploads {
    #     root /home/www/public_html/localhost/public;
    #     autoindex on;
    # }

    # # Nginx web server (/home/www/public_html/localhost/public)
    # location ^~ /public {
    #     root /home/www/public_html/localhost;
    #     autoindex on;
    # }

    # # Nginx web server (/usr/share/nginx/html/index.html)
    # location / {
    #     root  /usr/share/nginx/html;
    #     index index.html index.htm;
    # }

    # Nginx web server (/home/www/public_html/localhost)
    location / {
        root /home/www/public_html/localhost;
        # index index.html index.htm;
        try_files $uri $uri/ =400;
        autoindex on;
    }

    #===========#
    # Redirects #
    #===========#

    location ^~ /keyrock {
        return 301 https://$host:3443;
    }

    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
    }
}

server {
    listen      2024 ssl;
    listen [::]:2024 ssl;
    server_name enershare.zapto.org;

    ssl_certificate   /etc/letsencrypt/live/enershare.zapto.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/enershare.zapto.org/privkey.pem;

    location ^~ /core/ {
        proxy_pass http://172.17.0.1:8080/;
    }

    location ^~ /keyclock/ {
        proxy_pass http://172.17.0.1:8081/;
    }

    location / {
        proxy_pass http://172.17.0.1:4173;
    }
}

#}
